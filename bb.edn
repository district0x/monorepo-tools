{:paths ["src" "test"]
 :deps {org.babashka/cli {:mvn/version "0.4.39"}}

 :tasks {migrate {:doc "Import existing CLJS (using shadow-cljs, deps.edn) library with history from git repo"
                  :requires ([migrate-library])
                  :task (apply migrate-library/-main *command-line-args*)}

         ci-config {:doc "Generates config for CirlceCi dynamic config continuation steps"
                    :requires ([generate-ci-config])
                    :task (apply generate-ci-config/-main *command-line-args*)}

         update-versions {:doc "Take changed library and bump versions of all affected by it through dependency"
                          :requires ([update-library-versions])
                          :task (apply update-library-versions/-main *command-line-args*)}

         release {:doc "Try to shell out to clojure. Use: bb release VERSION LIBPATH"
                  ; This task runs via Clojure in JVM (due to it needing slipset/deps-deploy which doesn't work with Babashka)
                  ; The escaping is needed to make Clojure interpret version (20.10.1) as string instead of number (and therefore failing)
                  ; :task (clojure (format "-X release/-main :version '\"%s\"' :library '%s'" (first *command-line-args*) (second *command-line-args*)))
                  :requires ([babashka.cli :as cli])
                  :task (let [args-opts (cli/parse-args *command-line-args*)
                              version (get-in args-opts [:args 0])
                              library (get-in args-opts [:args 1])
                              repo-root (get-in args-opts [:opts :repo-root])]
                          (clojure (format "-X release/-main :version '\"%s\"' :library '%s' :repo-root '%s'" version library repo-root ())))}

         mt-test {:doc "Run monorepo-tools tests"
                  :requires ([test-runner])
                  :task (test-runner/-main *command-line-args*)}

         find-candidates {:doc "Finds all library candidates form folder for for monorepo migration. Outputs script to be used with `bb migrate`"
                          :requires [find-migrate-candidates]
                          :task (apply find-migrate-candidates/-main *command-line-args*)}}}
